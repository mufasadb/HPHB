{"ast":null,"code":"import _classCallCheck from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielbeach/Work/HPHB/client/src/components/wizards.js\";\nimport React, { Component } from 'react';\n\nvar Wizards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Wizards, _Component);\n\n  function Wizards() {\n    var _this;\n\n    _classCallCheck(this, Wizards);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wizards).call(this));\n    _this.state = {\n      wizards: [],\n      currentSelection: 0\n    };\n    return _this;\n  }\n\n  _createClass(Wizards, [{\n    key: \"grabdetails\",\n    value: function grabdetails() {\n      var _this2 = this;\n\n      fetch('/players').then(function (res) {\n        return res.json();\n      }).then(function (wizards) {\n        return _this2.setState({\n          wizards: wizards\n        }, function () {\n          return console.log(\"We've got the following wizards \", wizards);\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.grabdetails();\n    }\n  }, {\n    key: \"playing\",\n    value: function playing(UID) {\n      fetch('playcard', {\n        headers: {\n          'content-type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          bontent: UID\n        })\n      });\n    }\n  }, {\n    key: \"selectCard\",\n    value: function selectCard(UID) {\n      this.setState({\n        currentSelection: UID\n      });\n      console.log('well this happened');\n    }\n  }, {\n    key: \"cardClass\",\n    value: function cardClass(UID) {\n      var results = \"card\";\n\n      if (UID === this.state.currentSelection) {\n        results = \"activeCard\";\n      }\n\n      return results;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log('the wizards are now ', this.state.wizards);\n      return React.createElement(\"div\", {\n        className: \"Wizard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.wizards.map(function (wizard) {\n        return React.createElement(\"div\", {\n          key: wizard.number,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \" \", wizard.number, wizard.character, \" has \", wizard.health, \" health, \", wizard.gold, \" gold, \", wizard.lightning, \" lightning and has the following cards \", React.createElement(\"div\", {\n          className: \"wizardHand\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \" \", wizard.hand.map(function (card) {\n          return React.createElement(\"div\", {\n            className: _this3.cardClass(card.UID),\n            onClick: function onClick() {\n              return _this3.playing(card.UID);\n            },\n            key: card.UID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \" \", card.name, \" \");\n        })));\n      })));\n    }\n  }]);\n\n  return Wizards;\n}(Component);\n\nexport default Wizards;","map":{"version":3,"sources":["/Users/danielbeach/Work/HPHB/client/src/components/wizards.js"],"names":["React","Component","Wizards","state","wizards","currentSelection","fetch","then","res","json","setState","console","log","grabdetails","UID","headers","method","body","JSON","stringify","bontent","results","map","wizard","number","character","health","gold","lightning","hand","card","cardClass","playing","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;AACF,qBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,gBAAgB,EAAE;AAFT,KAAb;AAFU;AAMb;;;;kCACa;AAAA;;AACVC,MAAAA,KAAK,CAAC,UAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAH,OAAO;AAAA,eAAI,MAAI,CAACM,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAPA;AAAF,SAAd,EAA2B;AAAA,iBAAMO,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDR,OAAhD,CAAN;AAAA,SAA3B,CAAJ;AAAA,OAFjB;AAGH;;;wCAEmB;AAChB,WAAKS,WAAL;AACH;;;4BACOC,G,EAAK;AACTR,MAAAA,KAAK,CAAC,UAAD,EAAa;AACdS,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SADK;AAIdC,QAAAA,MAAM,EAAE,MAJM;AAKdC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,OAAO,EAAEN;AADQ,SAAf;AALQ,OAAb,CAAL;AASH;;;+BACUA,G,EAAK;AACZ,WAAKJ,QAAL,CAAc;AAACL,QAAAA,gBAAgB,EAAES;AAAnB,OAAd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;;;8BACSE,G,EAAI;AACV,UAAIO,OAAO,GAAG,MAAd;;AACA,UAAGP,GAAG,KAAK,KAAKX,KAAL,CAAWE,gBAAtB,EAAuC;AACnCgB,QAAAA,OAAO,GAAG,YAAV;AACH;;AACD,aAAOA,OAAP;AACH;;;6BAEQ;AAAA;;AAELV,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAKT,KAAL,CAAWC,OAA/C;AACA,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWC,OAAX,CAAmBkB,GAAnB,CAAuB,UAACC,MAAD;AAAA,eAAY;AAAK,UAAA,GAAG,EAAEA,MAAM,CAACC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA2BD,MAAM,CAACC,MAAlC,EAA0CD,MAAM,CAACE,SAAjD,WAAiEF,MAAM,CAACG,MAAxE,eAAyFH,MAAM,CAACI,IAAhG,aAA6GJ,MAAM,CAACK,SAApH,6CACR;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA8BL,MAAM,CAACM,IAAP,CAAYP,GAAZ,CAAgB,UAACQ,IAAD;AAAA,iBAAU;AAAK,YAAA,SAAS,EAAE,MAAI,CAACC,SAAL,CAAeD,IAAI,CAAChB,GAApB,CAAhB;AAA0C,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACkB,OAAL,CAAaF,IAAI,CAAChB,GAAlB,CAAN;AAAA,aAAnD;AAAgF,YAAA,GAAG,EAAEgB,IAAI,CAAChB,GAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiGgB,IAAI,CAACG,IAAtG,MAAV;AAAA,SAAhB,CAA9B,CADQ,CAAZ;AAAA,OAAvB,CADL,CADJ,CADJ;AAWH;;;;EAtDiBhC,S;;AAyDtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Wizards extends Component {\n    constructor() {\n        super();\n        this.state = {\n            wizards: [],\n            currentSelection: 0\n        };\n    }\n    grabdetails() {\n        fetch('/players')\n            .then(res => res.json())\n            .then(wizards => this.setState({ wizards }, () => console.log(\"We've got the following wizards \", wizards)));\n    }\n\n    componentDidMount() {\n        this.grabdetails()\n    }\n    playing(UID) {\n        fetch('playcard', {\n            headers: {\n                'content-type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                bontent: UID\n            })\n        })\n    }\n    selectCard(UID) {\n        this.setState({currentSelection: UID})\n        console.log('well this happened')\n    }\n    cardClass(UID){\n        let results = \"card\"\n        if(UID === this.state.currentSelection){\n            results = \"activeCard\"\n        }\n        return results\n    }\n\n    render() {\n\n        console.log('the wizards are now ', this.state.wizards)\n        return (\n            <div className=\"Wizard\">\n                <div>\n                    {this.state.wizards.map((wizard) => <div key={wizard.number}> {wizard.number}{wizard.character} has {wizard.health} health, {wizard.gold} gold, {wizard.lightning} lightning\n                    and has the following cards <div className=\"wizardHand\"> {wizard.hand.map((card) => <div className={this.cardClass(card.UID)} onClick={() => this.playing(card.UID)}key={card.UID}> {card.name} </div>)}\n                        </div>\n                    </div>)}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Wizards;"]},"metadata":{},"sourceType":"module"}