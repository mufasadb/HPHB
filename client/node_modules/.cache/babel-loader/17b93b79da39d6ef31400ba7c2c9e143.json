{"ast":null,"code":"import _classCallCheck from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielbeach/Work/HPHB/client/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Board from './components/board.js';\nimport Wizards from './components/wizards.js';\nimport HogwartsCards from './components/hogwartsCards.js'; // import Logo from './components/logo';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      wizards: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"grabdetails\",\n    value: function grabdetails() {\n      var _this2 = this;\n\n      fetch('/players').then(function (res) {\n        return res.json();\n      }).then(function (wizards) {\n        return _this2.setState({\n          wizards: wizards\n        }, function () {\n          return console.log(\"We've got the following wizards \", wizards);\n        });\n      });\n    }\n  }, {\n    key: \"choiceSelector\",\n    value: function choiceSelector(card) {\n      if (card.decisions.exists) {} else {\n        card.actionObjects;\n      }\n\n      return actions;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.grabdetails();\n    }\n  }, {\n    key: \"playing\",\n    value: function playing(card) {\n      var actions = this.choiceSelector(card);\n      fetch('playcard', {\n        headers: {\n          'content-type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          cardUID: UID,\n          actionObject: actions\n        })\n      });\n      this.grabdetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" HPHB\"), React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Wizards, {\n        playing: this.playing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(HogwartsCards, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/danielbeach/Work/HPHB/client/src/App.js"],"names":["React","Component","Board","Wizards","HogwartsCards","App","state","wizards","fetch","then","res","json","setState","console","log","card","decisions","exists","actionObjects","actions","grabdetails","choiceSelector","headers","method","body","JSON","stringify","cardUID","UID","actionObject","playing"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,aAAP,MAA0B,+BAA1B,C,CACA;;IAEMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAFY;AAKf;;;;kCACa;AAAA;;AACVC,MAAAA,KAAK,CAAC,UAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAF,OAAO;AAAA,eAAI,MAAI,CAACK,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAPA;AAAF,SAAd,EAA2B;AAAA,iBAAMM,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDP,OAAhD,CAAN;AAAA,SAA3B,CAAJ;AAAA,OAFjB;AAGH;;;mCACcQ,I,EAAK;AAClB,UAAGA,IAAI,CAACC,SAAL,CAAeC,MAAlB,EAAyB,CAExB,CAFD,MAEO;AACLF,QAAAA,IAAI,CAACG,aAAL;AACD;;AACD,aAAOC,OAAP;AACD;;;wCACmB;AAChB,WAAKC,WAAL;AACH;;;4BACSL,I,EAAM;AACZ,UAAII,OAAO,GAAG,KAAKE,cAAL,CAAoBN,IAApB,CAAd;AACAP,MAAAA,KAAK,CAAC,UAAD,EAAa;AACdc,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SADK;AAIdC,QAAAA,MAAM,EAAE,MAJM;AAKdC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,OAAO,EAAEC,GADQ;AAEjBC,UAAAA,YAAY,EAAEV;AAFG,SAAf;AALQ,OAAb,CAAL;AAUA,WAAKC,WAAL;AACH;;;6BACY;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,EAEF,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKU,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,EAGF,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHE,CAHF,CADF,CADF;AAcD;;;;EApDa7B,S;;AAuDhB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Board from './components/board.js';\nimport Wizards from './components/wizards.js';\nimport HogwartsCards from './components/hogwartsCards.js';\n// import Logo from './components/logo';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n        wizards: [],\n    };\n}\ngrabdetails() {\n    fetch('/players')\n        .then(res => res.json())\n        .then(wizards => this.setState({ wizards }, () => console.log(\"We've got the following wizards \", wizards)));\n}\nchoiceSelector(card){\n  if(card.decisions.exists){\n\n  } else {\n    card.actionObjects\n  }\n  return actions\n}\ncomponentDidMount() {\n    this.grabdetails()\n}\n  playing(card) {\n    let actions = this.choiceSelector(card)\n    fetch('playcard', {\n        headers: {\n            'content-type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n            cardUID: UID,\n            actionObject: actions\n        })\n    })\n    this.grabdetails()\n}\n    render() {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n            <h1 className=\"App-title\"> HPHB</h1>\n            <div className=\"game\">\n          <Board/>\n          <Wizards playing={this.playing}/>\n          <HogwartsCards/>\n          </div>\n          </header>\n  \n        </div>\n      );\n    }\n  }\n  \n  export default App;"]},"metadata":{},"sourceType":"module"}