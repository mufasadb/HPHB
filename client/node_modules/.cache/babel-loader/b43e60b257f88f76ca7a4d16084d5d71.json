{"ast":null,"code":"import _classCallCheck from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danielbeach/Work/HPHB/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danielbeach/Work/HPHB/client/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Board from './components/board.js';\nimport Wizards from './components/wizards.js';\nimport HogwartsCards from './components/hogwartsCards.js';\nimport choiceModal from './components/choiceModal.js'; // import Logo from './components/logo';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      wizards: [],\n      modalActive: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"grabdetails\",\n    value: function grabdetails() {\n      var _this2 = this;\n\n      fetch('/players').then(function (res) {\n        return res.json();\n      }).then(function (wizards) {\n        return _this2.setState({\n          wizards: wizards\n        }, function () {\n          return console.log(\"We've got the following wizards \", wizards);\n        });\n      });\n    }\n  }, {\n    key: \"makeChoice\",\n    value: function makeChoice(card) {\n      this.setModal(true);\n    }\n  }, {\n    key: \"setModal\",\n    value: function setModal(state) {\n      this.setState({\n        modalActive: state\n      });\n    }\n  }, {\n    key: \"choiceHandler\",\n    value: function choiceHandler(card) {\n      var actions = 0;\n\n      if (card.decisions.exists) {\n        actions = this.makeChoice(card);\n      } else playCard(card, actions);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.grabdetails();\n    }\n  }, {\n    key: \"playCard\",\n    value: function playCard(card, actions) {\n      fetch('playcard', {\n        headers: {\n          'content-type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          cardUID: card.UID,\n          actions: actions\n        })\n      });\n      this.grabdetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var decisions = {\n        exist: false,\n        options: [],\n        text: \"\"\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" HPHB\"), React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Wizards, {\n        playing: this.choiceHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(HogwartsCards, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"choiceModal\", {\n        choiceOptions: decisions.options,\n        choiceText: decisions.text,\n        unModal: this.setModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/danielbeach/Work/HPHB/client/src/App.js"],"names":["React","Component","Board","Wizards","HogwartsCards","choiceModal","App","state","wizards","modalActive","fetch","then","res","json","setState","console","log","card","setModal","actions","decisions","exists","makeChoice","playCard","grabdetails","headers","method","body","JSON","stringify","cardUID","UID","exist","options","text","choiceHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Board from './components/board.js';\nimport Wizards from './components/wizards.js';\nimport HogwartsCards from './components/hogwartsCards.js';\nimport choiceModal from './components/choiceModal.js';\n// import Logo from './components/logo';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      wizards: [],\n      modalActive: false\n    };\n  }\n  grabdetails() {\n    fetch('/players')\n      .then(res => res.json())\n      .then(wizards => this.setState({ wizards }, () => console.log(\"We've got the following wizards \", wizards)));\n  }\n  makeChoice(card) {\n    this.setModal(true)\n  }\n  setModal(state) {\n    this.setState({ modalActive: state })\n  }\n  choiceHandler(card) {\n    var actions = 0\n    if (card.decisions.exists) {\n      actions = this.makeChoice(card)\n    } else (playCard(card, actions))\n  }\n  componentDidMount() {\n    this.grabdetails()\n  }\n  playCard(card, actions) {\n    fetch('playcard', {\n      headers: {\n        'content-type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        cardUID: card.UID,\n        actions: actions\n      })\n    })\n    this.grabdetails()\n  }\n  render() {\n    let decisions = {\n      exist: false,\n      options: [],\n      text: \"\"\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <h1 className=\"App-title\"> HPHB</h1>\n          <div className=\"game\">\n            <Board />\n            <Wizards playing={this.choiceHandler} />\n            <HogwartsCards />\n            <choiceModal choiceOptions={decisions.options} choiceText={decisions.text} unModal={this.setModal} />\n          </div>\n        </header>\n\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}